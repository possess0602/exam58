host = "140.136.155.116")
dbSendQuery(con,"SET NAMES big5")
args <- commandArgs(TRUE)
# sid <- args
sid <- 'S0102'
node_sql <- paste("SELECT * FROM segment_data WHERE site_id = '",sid,"'AND evaluation = 'N'", sep="")
node_sql
relationship_sql <- paste("SELECT from_id,to_id,weight,color FROM `segment_relationship` SR WHERE site_id = '",sid,"' AND SR.from_id = ANY(SELECT id FROM segment_data WHERE site_id = '",sid,"' AND evaluation = 'N')", sep="")
relationship_sql
segment <- dbGetQuery(con, node_sql)
relationship <- dbGetQuery(con, relationship_sql)
x <- data.frame(segment)
y <- data.frame(relationship)
x
y
nodes <- data.frame(id = c(x$id), label = c(x$segment), color = c(x$color),
# title = paste("<p>", x$segment,"</p>"),
font.size = 30, value = c(x$weight))
edges <- data.frame(from = c(y$from_id), to = c(y$to_id),value = c(y$weight),color = c(y$color))
ccout <- visNetwork(nodes,edges, width = "100%",height = "1000px") %>%
visIgraphLayout()
visSave(ccout, file = "C://xampp/htdocs/SNA_sean/exam58/quasarapp/src/statics/bad.html",selfcontained = TRUE, background = "white")
library('RMySQL', warn.conflicts = FALSE)
library('visNetwork', warn.conflicts = FALSE)
library('igraph', warn.conflicts = FALSE)
con <- dbConnect(MySQL(),
db = "homestead",
username = "root",
password = "sightseeing",
host = "140.136.155.116")
dbSendQuery(con,"SET NAMES big5")
args <- commandArgs(TRUE)
# sid <- args
sid <- 'S0102'
node_sql <- paste("SELECT * FROM segment_data WHERE site_id = '",sid,"'AND evaluation = 'P'", sep="")
node_sql
relationship_sql <- paste("SELECT from_id,to_id,weight,color FROM `segment_relationship` SR WHERE site_id = '",sid,"' AND SR.from_id = ANY(SELECT id FROM segment_data WHERE site_id = '",sid,"' AND evaluation = 'P')", sep="")
relationship_sql
segment <- dbGetQuery(con, node_sql)
relationship <- dbGetQuery(con, relationship_sql)
x <- data.frame(segment)
y <- data.frame(relationship)
x$color
# xXx$weight
nodes <- data.frame(id = c(x$id), label = c(x$segment), color = c(x$color),
# title = paste("<p>", x$segment,"</p>"),
font.size = 30, value = c(x$weight))
edges <- data.frame(from = c(y$from_id), to = c(y$to_id),value = c(y$weight),color = c(y$color))
ccout <- visNetwork(nodes,edges, width = "100%",height = "1000px") %>%
visIgraphLayout()
visSave(ccout, file = "C://xampp/htdocs/SNA_sean/exam58/quasarapp/src/statics/good.html",selfcontained = TRUE, background = "white")
library('RMySQL', warn.conflicts = FALSE)
library('visNetwork', warn.conflicts = FALSE)
library('igraph', warn.conflicts = FALSE)
con <- dbConnect(MySQL(),
db = "homestead",
username = "root",
password = "sightseeing",
host = "140.136.155.116")
dbSendQuery(con,"SET NAMES big5")
args <- commandArgs(TRUE)
sid <- args
# sid <- 'S0102'
node_sql <- paste("SELECT * FROM segment_data WHERE site_id = '",sid,"'AND evaluation = 'N'", sep="")
node_sql
relationship_sql <- paste("SELECT from_id,to_id,weight,color FROM `segment_relationship` SR WHERE site_id = '",sid,"' AND SR.from_id = ANY(SELECT id FROM segment_data WHERE site_id = '",sid,"' AND evaluation = 'N')", sep="")
relationship_sql
segment <- dbGetQuery(con, node_sql)
relationship <- dbGetQuery(con, relationship_sql)
x <- data.frame(segment)
y <- data.frame(relationship)
x
y
nodes <- data.frame(id = c(x$id), label = c(x$segment), color = c(x$color),
# title = paste("<p>", x$segment,"</p>"),
font.size = 30, value = c(x$weight))
edges <- data.frame(from = c(y$from_id), to = c(y$to_id),value = c(y$weight),color = c(y$color))
ccout <- visNetwork(nodes,edges, width = "100%",height = "500px") %>%
visIgraphLayout()
visSave(ccout, file = "C://xampp/htdocs/SNA_sean/exam58/quasarapp/src/statics/bad.html",selfcontained = TRUE, background = "white")
library('RMySQL', warn.conflicts = FALSE)
library('visNetwork', warn.conflicts = FALSE)
library('igraph', warn.conflicts = FALSE)
con <- dbConnect(MySQL(),
db = "homestead",
username = "root",
password = "sightseeing",
host = "140.136.155.116")
dbSendQuery(con,"SET NAMES big5")
args <- commandArgs(TRUE)
# sid <- args
sid <- 'S0102'
node_sql <- paste("SELECT * FROM segment_data WHERE site_id = '",sid,"'AND evaluation = 'P'", sep="")
node_sql
relationship_sql <- paste("SELECT from_id,to_id,weight,color FROM `segment_relationship` SR WHERE site_id = '",sid,"' AND SR.from_id = ANY(SELECT id FROM segment_data WHERE site_id = '",sid,"' AND evaluation = 'P')", sep="")
relationship_sql
segment <- dbGetQuery(con, node_sql)
relationship <- dbGetQuery(con, relationship_sql)
x <- data.frame(segment)
y <- data.frame(relationship)
x$color
# xXx$weight
nodes <- data.frame(id = c(x$id), label = c(x$segment), color = c(x$color),
# title = paste("<p>", x$segment,"</p>"),
font.size = 30, value = c(x$weight))
edges <- data.frame(from = c(y$from_id), to = c(y$to_id),value = c(y$weight),color = c(y$color))
ccout <- visNetwork(nodes,edges, width = "100%",height = "500px") %>%
visIgraphLayout()
visSave(ccout, file = "C://xampp/htdocs/SNA_sean/exam58/quasarapp/src/statics/good.html",selfcontained = TRUE, background = "white")
library('RMySQL', warn.conflicts = FALSE)
library('visNetwork', warn.conflicts = FALSE)
library('igraph', warn.conflicts = FALSE)
con <- dbConnect(MySQL(),
db = "homestead",
username = "root",
password = "sightseeing",
host = "140.136.155.116")
dbSendQuery(con,"SET NAMES big5")
args <- commandArgs(TRUE)
# sid <- args
sid <- 'S0102'
node_sql <- paste("SELECT * FROM segment_data WHERE site_id = '",sid,"'AND evaluation = 'N'", sep="")
node_sql
relationship_sql <- paste("SELECT from_id,to_id,weight,color FROM `segment_relationship` SR WHERE site_id = '",sid,"' AND SR.from_id = ANY(SELECT id FROM segment_data WHERE site_id = '",sid,"' AND evaluation = 'N')", sep="")
relationship_sql
segment <- dbGetQuery(con, node_sql)
relationship <- dbGetQuery(con, relationship_sql)
x <- data.frame(segment)
y <- data.frame(relationship)
x
y
nodes <- data.frame(id = c(x$id), label = c(x$segment), color = c(x$color),
# title = paste("<p>", x$segment,"</p>"),
font.size = 30, value = c(x$weight))
edges <- data.frame(from = c(y$from_id), to = c(y$to_id),value = c(y$weight),color = c(y$color))
ccout <- visNetwork(nodes,edges, width = "100%",height = "500px") %>%
visIgraphLayout()
visSave(ccout, file = "C://xampp/htdocs/SNA_sean/exam58/quasarapp/src/statics/bad.html",selfcontained = TRUE, background = "white")
library('visNetwork')
library('igraph')
n<-read.csv("path_node.csv", header=T, as.is=T, sep=',', fileEncoding = 'utf-8')
sr<-read.csv("path_edge.csv", header=T, as.is=T, sep=',', fileEncoding = 'utf-8')
s_name <- n[1,1]
nodes <- data.frame(id = c(n$sid), group = c(n$level),
# label = c(n$near_site),
# title = paste("<p>", n$name,"</p>"),
font.size = 30)
edges <- data.frame(from = c(sr$from_id), to = c(sr$to_id),
value = c(sr$d_edge))
ccout <- visNetwork(nodes, edges, width = "100%")%>%
visIgraphLayout() %>% #靜態
visOptions(highlightNearest = TRUE, selectedBy= "group",
nodesIdSelection = list(enabled = TRUE,  selected = s_name))
visSave(ccout, file = "C://xampp/htdocs/SNA_sean/exam58/quasarapp/src/statics/path.html",selfcontained = TRUE, background = "white")
library('visNetwork')
library('igraph')
n<-read.csv("path_node.csv", header=T, as.is=T, sep=',', fileEncoding = 'utf-8')
sr<-read.csv("path_edge.csv", header=T, as.is=T, sep=',', fileEncoding = 'utf-8')
s_name <- n[1,1]
nodes <- data.frame(id = c(n$sid), group = c(n$level),
# label = c(n$near_site),
# title = paste("<p>", n$name,"</p>"),
font.size = 30)
edges <- data.frame(from = c(sr$from_id), to = c(sr$to_id),
value = c(sr$d_edge))
ccout <- visNetwork(nodes, edges, width = "100%")%>%
visIgraphLayout() %>% #靜態
visOptions(highlightNearest = TRUE, selectedBy= "group",
nodesIdSelection = list(enabled = TRUE,  selected = s_name))
visSave(ccout, file = "C://xampp/htdocs/SNA_sean/exam58/quasarapp/src/statics/path.html",selfcontained = TRUE, background = "white")
library('visNetwork')
library('igraph')
n<-read.csv("C://xampp/htdocs/SNA_sean/exam58/public/path_node.csv", header=T, as.is=T, sep=',', fileEncoding = 'utf-8')
sr<-read.csv("C://xampp/htdocs/SNA_sean/exam58/public/path_edge.csv", header=T, as.is=T, sep=',', fileEncoding = 'utf-8')
s_name <- n[1,1]
nodes <- data.frame(id = c(n$sid), group = c(n$level),
# label = c(n$near_site),
# title = paste("<p>", n$name,"</p>"),
font.size = 30)
edges <- data.frame(from = c(sr$from_id), to = c(sr$to_id),
value = c(sr$d_edge))
ccout <- visNetwork(nodes, edges, width = "100%")%>%
visIgraphLayout() %>% #靜態
visOptions(highlightNearest = TRUE, selectedBy= "group",
nodesIdSelection = list(enabled = TRUE,  selected = s_name))
visSave(ccout, file = "C://xampp/htdocs/SNA_sean/exam58/quasarapp/src/statics/path.html",selfcontained = TRUE, background = "white")
library('RMySQL', warn.conflicts = FALSE)
library('visNetwork', warn.conflicts = FALSE)
library('igraph', warn.conflicts = FALSE)
con <- dbConnect(MySQL(),
db = "homestead",
username = "root",
password = "sightseeing",
host = "140.136.155.116")
dbSendQuery(con,"SET NAMES big5")
args <- commandArgs(TRUE)
sid <- args
# sid <- 'S0102'
node_sql <- paste("SELECT * FROM segment_data WHERE site_id = '",sid,"'AND evaluation = 'P'", sep="")
node_sql
relationship_sql <- paste("SELECT from_id,to_id,weight,color FROM `segment_relationship` SR WHERE site_id = '",sid,"' AND SR.from_id = ANY(SELECT id FROM segment_data WHERE site_id = '",sid,"' AND evaluation = 'P')", sep="")
relationship_sql
segment <- dbGetQuery(con, node_sql)
relationship <- dbGetQuery(con, relationship_sql)
x <- data.frame(segment)
y <- data.frame(relationship)
x$color
# xXx$weight
nodes <- data.frame(id = c(x$id), label = c(x$segment), color = c(x$color),
# title = paste("<p>", x$segment,"</p>"),
font.size = 30, value = c(x$weight))
edges <- data.frame(from = c(y$from_id), to = c(y$to_id),value = c(y$weight),color = c(y$color))
ccout <- visNetwork(nodes,edges, width = "100%",height = "500px") %>%
visIgraphLayout()
visSave(ccout, file = "C://xampp/htdocs/SNA_sean/exam58/quasarapp/src/statics/good.html",selfcontained = TRUE, background = "white")
library('RMySQL', warn.conflicts = FALSE)
library('visNetwork', warn.conflicts = FALSE)
library('igraph', warn.conflicts = FALSE)
con <- dbConnect(MySQL(),
db = "homestead",
username = "root",
password = "sightseeing",
host = "140.136.155.116")
dbSendQuery(con,"SET NAMES big5")
# args <- commandArgs(TRUE)
# sid <- args
sid <- 'S0102'
#找到好的(P)裡面degree最大的
g_sql <- paste("SELECT s.degree
FROM segment_data s, site_data sd
WHERE (s.site_id = sd.id)
AND s.site_id = '",sid,"'
AND s.evaluation = 'P'", sep="")
good <- dbGetQuery(con, g_sql)
DegreeMax <- max(good$degree)
# 找到maxdegree的名稱
g <- paste0("SELECT id, segment, color, degree
FROM segment_data s
WHERE evaluation = 'P'
AND site_id = '",sid,"'
AND degree = '",DegreeMax,"'",sep="")
gname <- dbGetQuery(con, g)
#找到與maxdegree的id
gid = gname$id
# =============以上是為了找到gid(degree最高的點)=============
#被連到最多的圖亮吧
seg <- paste("SELECT s.id, s.segment, s.color, s.site_id, sd.name
FROM segment_data s, site_data sd
WHERE (s.site_id = sd.id)
AND s.site_id = '",sid,"'
AND s.evaluation = 'P'", sep="")
seg_relat <- paste("SELECT from_id,to_id,weight,color
FROM segment_relationship
WHERE site_id = '",sid,"'
AND from_id = ANY(SELECT id FROM segment_data WHERE site_id = '",sid,"' AND evaluation = 'P')", sep="")
segment <- dbGetQuery(con, seg)
relationship <- dbGetQuery(con, seg_relat)
x <- data.frame(segment)
y <- data.frame(relationship)
fsize <- (good$degree)
nodes <- data.frame(id = c(x$id), color = c(x$color),
label = c(x$segment),
# title = paste("<p>", x$segment,"</p>")
font.size = 40, value = fsize)
edges <- data.frame(from = c(y$from_id), to = c(y$to_id),
value = c(y$weight),color = c(y$color))
visNetwork(nodes,edges, width = "100%",height = "500px") %>%
visIgraphLayout() %>%
visOptions(highlightNearest = list(enabled = T, hover = T),
nodesIdSelection = list(enabled = TRUE))
# dbDisconnect(con)
on.exit(dbDisconnect(con))
# 測試db連接
lapply(dbListConnections(MySQL()), dbDisconnect)
library('RMySQL', warn.conflicts = FALSE)
library('visNetwork', warn.conflicts = FALSE)
library('igraph', warn.conflicts = FALSE)
con <- dbConnect(MySQL(),
db = "homestead",
username = "root",
password = "sightseeing",
host = "140.136.155.116")
dbSendQuery(con,"SET NAMES big5")
# args <- commandArgs(TRUE)
# sid <- args
sid <- 'S0102'
#找到好的(P)裡面degree最大的
g_sql <- paste("SELECT s.degree
FROM segment_data s, site_data sd
WHERE (s.site_id = sd.id)
AND s.site_id = '",sid,"'
AND s.evaluation = 'P'", sep="")
good <- dbGetQuery(con, g_sql)
DegreeMax <- max(good$degree)
# 找到maxdegree的名稱
g <- paste0("SELECT id, segment, color, degree
FROM segment_data s
WHERE evaluation = 'P'
AND site_id = '",sid,"'
AND degree = '",DegreeMax,"'",sep="")
gname <- dbGetQuery(con, g)
#找到與maxdegree的id
gid = gname$id
# =============以上是為了找到gid(degree最高的點)=============
#被連到最多的圖亮吧
seg <- paste("SELECT s.id, s.segment, s.color, s.site_id, sd.name
FROM segment_data s, site_data sd
WHERE (s.site_id = sd.id)
AND s.site_id = '",sid,"'
AND s.evaluation = 'P'", sep="")
seg_relat <- paste("SELECT from_id,to_id,weight,color
FROM segment_relationship
WHERE site_id = '",sid,"'
AND from_id = ANY(SELECT id FROM segment_data WHERE site_id = '",sid,"' AND evaluation = 'P')", sep="")
segment <- dbGetQuery(con, seg)
relationship <- dbGetQuery(con, seg_relat)
x <- data.frame(segment)
y <- data.frame(relationship)
fsize <- (good$degree)
nodes <- data.frame(id = c(x$id), color = c(x$color),
label = c(x$segment),
# title = paste("<p>", x$segment,"</p>")
font.size = 40, value = fsize)
edges <- data.frame(from = c(y$from_id), to = c(y$to_id),
value = c(y$weight),color = c(y$color))
visNetwork(nodes,edges, width = "100%",height = "500px") %>%
visIgraphLayout() %>%
visOptions(highlightNearest = list(enabled = T, hover = T),
nodesIdSelection = list(enabled = TRUE))
# dbDisconnect(con)
on.exit(dbDisconnect(con))
# 測試db連接
lapply(dbListConnections(MySQL()), dbDisconnect)
library('RMySQL')
library('visNetwork')
library('igraph')
con <- dbConnect(MySQL(),
db = "homestead",
username = "root",
password = "sightseeing",
host = "140.136.155.116")
dbSendQuery(con,"SET NAMES big5")
# args <- commandArgs(TRUE)
# sid <- args
sid <- 'S0102'
#找到壞的(N)裡面degree最大的
b_sql <- paste("SELECT s.degree
FROM segment_data s, site_data sd
WHERE (s.site_id = sd.id)
AND s.site_id = '",sid,"'
AND s.evaluation = 'N'", sep="")
bad <- dbGetQuery(con, b_sql)
DegreeMax <- max(bad$degree)
# 找到maxdegree的名稱
b <- paste0("SELECT id, segment, color, degree
FROM segment_data s
WHERE evaluation = 'N'
AND site_id = '",sid,"'
AND degree = '",DegreeMax,"'",sep="")
bname <- dbGetQuery(con, b)
#找到與maxdegree的id
bid = bname$id
# =============以上是為了找到bid(degree最高的點)=============
#被連到最多的圖亮吧
seg <- paste("SELECT s.id, s.segment, s.color, s.site_id, sd.name
FROM segment_data s, site_data sd
WHERE (s.site_id = sd.id)
AND s.site_id = '",sid,"'
AND s.evaluation = 'N'", sep="")
seg_relat <- paste("SELECT from_id,to_id,weight,color
FROM segment_relationship
WHERE site_id = '",sid,"'
AND from_id = ANY(SELECT id FROM segment_data WHERE site_id = '",sid,"' AND evaluation = 'N')", sep="")
segment <- dbGetQuery(con, seg)
relationship <- dbGetQuery(con, seg_relat)
x <- data.frame(segment)
y <- data.frame(relationship)
fsize <- (bad$degree)
nodes <- data.frame(id = c(x$id), color = c(x$color),
label = c(x$segment),
# title = paste("<p>", x$segment,"</p>")
font.size = 30, value = fsize)
edges <- data.frame(from = c(y$from_id), to = c(y$to_id),
value = c(y$weight),color = c(y$color))
visNetwork(nodes,edges, width = "100%",height = "500px") %>%
visIgraphLayout() %>%
visOptions(highlightNearest = list(enabled = T, hover = T),
nodesIdSelection = list(enabled = TRUE))
# dbDisconnect(con)
on.exit(dbDisconnect(con))
# 測試db連接
lapply(dbListConnections(MySQL()), dbDisconnect)
library('RMySQL', warn.conflicts = FALSE)
library('visNetwork', warn.conflicts = FALSE)
library('igraph', warn.conflicts = FALSE)
con <- dbConnect(MySQL(),
db = "homestead",
username = "root",
password = "sightseeing",
host = "140.136.155.116")
dbSendQuery(con,"SET NAMES big5")
# args <- commandArgs(TRUE)
# sid <- args
sid <- 'S0102'
#找到好的(P)裡面degree最大的
g_sql <- paste("SELECT s.degree
FROM segment_data s, site_data sd
WHERE (s.site_id = sd.id)
AND s.site_id = '",sid,"'
AND s.evaluation = 'P'", sep="")
good <- dbGetQuery(con, g_sql)
DegreeMax <- max(good$degree)
# 找到maxdegree的名稱
g <- paste0("SELECT id, segment, color, degree
FROM segment_data s
WHERE evaluation = 'P'
AND site_id = '",sid,"'
AND degree = '",DegreeMax,"'",sep="")
gname <- dbGetQuery(con, g)
#找到與maxdegree的id
gid = gname$id
# =============以上是為了找到gid(degree最高的點)=============
#被連到最多的圖亮吧
seg <- paste("SELECT s.id, s.segment, s.color, s.site_id, sd.name
FROM segment_data s, site_data sd
WHERE (s.site_id = sd.id)
AND s.site_id = '",sid,"'
AND s.evaluation = 'P'", sep="")
seg_relat <- paste("SELECT from_id,to_id,weight,color
FROM segment_relationship
WHERE site_id = '",sid,"'
AND from_id = ANY(SELECT id FROM segment_data WHERE site_id = '",sid,"' AND evaluation = 'P')", sep="")
segment <- dbGetQuery(con, seg)
relationship <- dbGetQuery(con, seg_relat)
x <- data.frame(segment)
y <- data.frame(relationship)
fsize <- (good$degree)
nodes <- data.frame(id = c(x$id), color = c(x$color),
label = c(x$segment),
# title = paste("<p>", x$segment,"</p>")
font.size = 40, value = fsize)
edges <- data.frame(from = c(y$from_id), to = c(y$to_id),
value = c(y$weight),color = c(y$color))
ccout <- visNetwork(nodes,edges, width = "100%",height = "500px") %>%
visIgraphLayout() %>%
visOptions(highlightNearest = list(enabled = T, hover = T),
nodesIdSelection = list(enabled = TRUE))
visSave(ccout, file = "C://xampp/htdocs/SNA_sean/exam58/quasarapp/src/statics/good.html",selfcontained = TRUE, background = "white")
# dbDisconnect(con)
on.exit(dbDisconnect(con))
# 測試db連接
lapply(dbListConnections(MySQL()), dbDisconnect)
library('RMySQL', warn.conflicts = FALSE)
library('visNetwork', warn.conflicts = FALSE)
library('igraph', warn.conflicts = FALSE)
con <- dbConnect(MySQL(),
db = "homestead",
username = "root",
password = "sightseeing",
host = "140.136.155.116")
dbSendQuery(con,"SET NAMES big5")
# args <- commandArgs(TRUE)
# sid <- args
sid <- 'S0102'
#找到壞的(N)裡面degree最大的
b_sql <- paste("SELECT s.degree
FROM segment_data s, site_data sd
WHERE (s.site_id = sd.id)
AND s.site_id = '",sid,"'
AND s.evaluation = 'N'", sep="")
bad <- dbGetQuery(con, b_sql)
DegreeMax <- max(bad$degree)
# 找到maxdegree的名稱
b <- paste0("SELECT id, segment, color, degree
FROM segment_data s
WHERE evaluation = 'N'
AND site_id = '",sid,"'
AND degree = '",DegreeMax,"'",sep="")
bname <- dbGetQuery(con, b)
#找到與maxdegree的id
bid = bname$id
# =============以上是為了找到bid(degree最高的點)=============
#被連到最多的圖亮吧
seg <- paste("SELECT s.id, s.segment, s.color, s.site_id, sd.name
FROM segment_data s, site_data sd
WHERE (s.site_id = sd.id)
AND s.site_id = '",sid,"'
AND s.evaluation = 'N'", sep="")
seg_relat <- paste("SELECT from_id,to_id,weight,color
FROM segment_relationship
WHERE site_id = '",sid,"'
AND from_id = ANY(SELECT id FROM segment_data WHERE site_id = '",sid,"' AND evaluation = 'N')", sep="")
segment <- dbGetQuery(con, seg)
relationship <- dbGetQuery(con, seg_relat)
x <- data.frame(segment)
y <- data.frame(relationship)
fsize <- (bad$degree)
nodes <- data.frame(id = c(x$id), color = c(x$color),
label = c(x$segment),
# title = paste("<p>", x$segment,"</p>")
font.size = 30, value = fsize)
edges <- data.frame(from = c(y$from_id), to = c(y$to_id),
value = c(y$weight),color = c(y$color))
ccout <- visNetwork(nodes,edges, width = "100%",height = "500px") %>%
visIgraphLayout() %>%
visOptions(highlightNearest = list(enabled = T, hover = T),
nodesIdSelection = list(enabled = TRUE))
visSave(ccout, file = "C://xampp/htdocs/SNA_sean/exam58/quasarapp/src/statics/bad.html",selfcontained = TRUE, background = "white")
# dbDisconnect(con)
on.exit(dbDisconnect(con))
# 測試db連接
lapply(dbListConnections(MySQL()), dbDisconnect)
